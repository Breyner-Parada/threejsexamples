/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/planeModel.glb -t 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber';

interface GLTFAction extends THREE.AnimationAction {
  action: THREE.AnimationAction;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_2005: THREE.Mesh
  }
  materials: {
    material_0: THREE.MeshBasicMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/planeModel.glb') as GLTFResult
  const helixRef = React.useRef<THREE.Mesh>(null);

  useFrame(() => {
    helixRef.current!.rotation.y += 0.05;
  })
  return (
    <group scale={0.1} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.Object_2.geometry}
          material={materials.material_0}
          position={[0, -33.996, 1.74]}
        />
        <mesh
          ref={helixRef}
          geometry={nodes.Object_2005.geometry}
          material={materials.material_0}
          position={[0, -33.996, 1.74]}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/planeModel.glb')
